개발 4년차

Front-End
    JavaScript, Bootstrap, CSS, HTML
Back-End
    Java(7, 8), Spring Framework, Spring Boot, RESTful API
    AWS(공부중)
DataBase
    MS-SQL, Oracle, MongoDB
ETC
    Linux, Git, Subversion



나의 장단점: 주요 강점을 부각하되 단점은 생략하거나 개선 방안을 제시해야 합니다.

나의 스킬셋: 대인관계 능력/기술스킬/기타 지식 등

나의 업적: 경력을 단순히 시간순으로 나열하는 것보단 뇌리에 남을 만한 에피소드 2~3가지로 스토리텔링 하는 게 좋습니다

나의 성과 또는 기여도: 되도록 정량적인 수치와 근거를 제시해야 합니다. 예를 들어 결함관리 프로세스를 개선해서 개발 효율을 20% 이상 높였다는 식으로요.

경력소개
지원동기 / 포부
이직 사유


나는 누구인가


카카오M과 협력하여 개발
    FrontEnd, BackEnd를 모두 담당하여 개발하면서,
    FrontEnd, BackEnd 모두 담당(기웅) 개발


다양한 부서, 사람들과 의사소통을 하면서 정확한 의사전달의 중요성에 대해 알게 되었습니다.
개발에 대한 지식이 전무한 운영팀과


SM 업무를 담당하면서, 다양한 부서와 커뮤니케이션을 했습니다.




기웅정보통신 재직시 SM 업무를 담당하였으며, 사수가 퇴직하여 설계, 회의 등 모든 업무를 혼자 담당하였습니다.
API 및 전문파일 전송, 수신 관련 작업이 있어 타 회사와도 커뮤니케이션을 진행하였습니다.
회의시 적당한 타협점을 찾아 마무리가 되도록 하였으며, 가장 어려웠던 부분은 '왜 안되는가?'였습니다.
시스템 DB 구조상 구현이 불가능한 부분에 대해 설명하고 이해시키는 부분이 가장 어려웠습니다.
전문용어를 최대한 사용하지 않고 처음부터 천천히 알려주는 방식이 비 개발자와 소통이 잘되는 방법이라는 것을 알게 되었습니다.
또한, 엠텍크루에 입사하여 업무 대부분을 카카오M 개발자들과 소통을 하며 진행하였습니다.
많은 개발자들과 소통을 하는것은 처음이어서 많은 어려움이 있었고, 내용 전달이 제대로 되지 않아 내용을 서로 다시 묻는 경우가 많았습니다.
정확한 의사 전달을 위해 간결하고 반드시 필요한 부분만 전달하는식으로 소통을 하였으며 처음보다 훨씬 나아진것을 느꼈습니다.




나만의 개발 철학 '내가 정답이 아니다.'
    내가 작성한 코드는 정답이 아니라는 생각을 가지고 있으며, 더 좋은 코드, 효율적인 코드를 찾기 위해 코드 작성시 다른 방법을 찾아봅니다.
    같은 코드를 작성하더라도 사용하는 클래스, 함수가 다름
    같은 프로젝트에서 다른 사람이 작성한 코드, 웹상에 공유되어있는 코드들을 참고하여 더 효율적인 로직을 적용하려고 하고 있습니다.
    같은 코드라도 더 좋은 방식으로 코드를 작성한 사람이 있고, 내가 알고있는 방식은 옛날 방식일수 있기 때문에 간단한 코드 작성이 아닌 경우
    다른 로직을 사용하는 방법이 있을지 생각되는 로직을 매번 검색을 하고 있습니다.
    알고있는 코드로 개발하면 개발 속도는 더 빠를지 몰라도 효율, 속도, 안정성 면에서는 남이 만든 코드보다 더 떨어질수가 있습니다.
    코드를 작성하더라도 더 좋은 방법에 대해 생각을하고 그에 맞춰 검색을 하고 있으며, 검색하여 나온 로직으로 테스트를 해보고,
    가장 좋다고 생각하는 방식을 실제 코드 작성에 사용하고 있습니다.



-- 완료
개발시 가장 중요하게 생각하는 부분
- No Error
- 로깅
-



개발시 가장 중요하게 생각하는 부분
최대한 오류가 발생하지 않는 코딩이 중요하나 그 보다 더 중요한것은, 소스 수정으로 인해 발생할 수 있는 부분에 대해 미리 파악하고 예방하는것이 가장 중요하다고 생각합니다.
서비스에 대한 이해도가 많이 부족할 경우, 기능 개선, 신규 기능 개발 등 작업을 진행하게 되면 수정된 부분 이외의 곳에서 예측하지 못한 오류가 발행할 수 있습니다.
이러한 오류는 시스템 전반에 걸쳐 영향을 줄 수가 있으며, 늦게 발견될 경우 심각한 문제로까지 번질수가 있습니다.
그리고, 같은 로직을 작성하더라도 서비스에 대해 이해도가 높은 경우 추가적인 안정 장치를 통해 예측하지 못한 오류를 조기에 막을수가 있습니다.



회사 생활은 즐거워야 한다.
회사 생활에 즐거움을 줄 수 있는 일이라면 참여하여, 좋은 분위기를 만들기 위해 먼저 나서고 있습니다.
기웅정보통신 재직시 임직원들에게 즐거움을 주기 위해 회사 행사 메인MC와 동호회 회장을을 담당였습니다.
약 2년이 넘게 회사 모든 행사의 MC를 담당하면서 다 같이 참여하고, 즐거운 분위기를 만들었다고 생각합니다.
그리고 당구 동호회 회장직을 맡으면서 매달 행사를 이끌고 진행하였습니다.
이렇게 즐거운 회사 생활을 만들수 있는 방법이 있다면 먼저 나서서 참여하고, 더 좋은 분위기를 만들려고 노력하고 있습니다.


자기개발을 통한 지속적인 정보 습득
새로운 툴, 기술에 대한 공부를 지속적으로 하고 있습니다.
IDE를 이클립스만 사용했으나 인텔리제이를 사비로 구입하여 실제 업무에 사용하고 있습니다.
IDE 변경으로 인해 개발 속도는 1.5배 이상 빨라졌으며 중복 코드 제거 등 코드 단축에도 많은 도움이 되고 있습니다.
또한, 카카오M에서 개발한 Java 1.8 버전의 소스를 참고하면서 Java 1.8 개인 스터디를 진행하고 있습니다.
다른 사람이 작성한 코드를 참고하는것이 개인 발전에 큰 도움을 준다고 생각하고 있으며, 같은 로직을 검색해도 처음 찾은것을 사용하는 것이 아니라
더 안정적이고 효율적인 코드를 찾아 내것으로 만들고 업무에 적용하고 있습니다.
이외에도 AWS를 공부하고 있으며 Jenkins를 통한 배포 자동화, ElasticSearch를 사용한 대규모 데이터 검색 기능을 공부하고 있습니다.
좀 늦더라도 계속해서 변해가는 IT 업계에 맞춰 나가기 위해 지속적으로 공부를 하고 있습니다.


이직사유
회사가 합병되면서 급여에 대한 부분에 변동이 생기게 되었고 이직을 확정의 계기가 되었습니다.
입사시 회사 합병 계획에 대해서 들어본적도 없으며 합병 한달전까지만 해도 합병에 대한 이야기가 나오지 않았습니다.
그러나, 합병 한달 전 갑작스럽게 합병 계획이 발표되었고 회사의 모든 복지가 변하였습니다.
가장 큰 변화는 급여에 대한 부분이며, 약속된 최소 상여금을 지급받지 못하게 되었고, 이에 따라 이직을 결심하게 되었습니다.